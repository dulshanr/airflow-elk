apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  labels:
    app.kubernetes.io/name: elasticsearch-logstash
    app.kubernetes.io/component: logstash
data:
  logstash.yml: |
    http.host: 0.0.0.0
    pipeline.ecs_compatibility: disabled
  pipelines.yml: |
    - pipeline.id: logstash
      path.config: "/usr/share/logstash/pipeline/logstash.conf"
 
  log4j2.properties: |
    logger.logstashpipeline.name = logstash.inputs.beats
    logger.logstashpipeline.level = error
 
---
 
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: logstash-pipeline
#   labels:
#     app.kubernetes.io/name: elasticsearch-logstash
#     app.kubernetes.io/component: logstash
# data:
#   logstash.conf: |
#     input {
#       file {
#         path => ["/usr/share/logstash/test/testdata.log"]
#         sincedb_path => "/dev/null"
#         start_position => "beginning"
#       }
#     }
#     filter {
#     }
#     output {
#       elasticsearch {
#         hosts => [ "${ES_HOSTS}" ]
#         user => "${ES_USER}"
#         password => "${ES_PASSWORD}"
#         cacert => '/etc/logstash/certificates/ca.crt'
#       }
#     }

 
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
  labels:
    app.kubernetes.io/name: elasticsearch-logstash
    app.kubernetes.io/component: logstash
data:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    filter {
      if [dag_id] and [task_id] and [execution_date] and [try_number] {
        mutate {
          add_field => {
            "log_id" => "%{[dag_id]}-%{[task_id]}-%{[execution_date]}-%{[try_number]}"
          }
        }
      }
    }

    output {
      elasticsearch {
        hosts => [ "${ES_HOSTS}" ]
        user => "${ES_USER}"
        password => "${ES_PASSWORD}"
        cacert => '/etc/logstash/certificates/ca.crt'
        index => "filebeat-%{+YYYY.MM.dd}"
      }
    }

